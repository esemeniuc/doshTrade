schema {
  query: QueryRoot
  mutation: MutationRoot
  subscription: SubscriptionRoot
}

# Directs the executor to query only when the field exists.
directive @ifdef on FIELD

type MutationRoot {
  notificationRequest(
    tickerSymbols: [String!]!
    pushSubscription: PushSubscription!
  ): Boolean!
}

input PushSubscription {
  endpoint: String!
  expirationTime: String
  keys: PushSubscriptionKeys!
}

input PushSubscriptionKeys {
  p256dh: String!
  auth: String!
}

type QueryRoot {
  getDebug(pushSubscription: PushSubscription!): Boolean!
}

# Represents a stock's status
type Stock {
  ticker: String!
  price: String!

  # TODO: figure out RSI
  rsi: Float!

  # % Change from the start of day
  percentChange: Float!
  timestamp: String!
}

type SubscriptionRoot {
  yoloHandCuratedStocks(tickerSymbols: [String!]!): [Stock!]!
}
